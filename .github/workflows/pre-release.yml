name: Build and publish pre-release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.1xx
  
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Pack
      run: dotnet pack --configuration Release
      
    - name: test0
      shell: pwsh
      run: "ls"

    - name: test1
      shell: pwsh
      run: "VictorKrogh.Extensions.Dapper"
      
    - name: test2
      shell: pwsh
      run: "ls /VictorKrogh.Extensions.Dapper/bin"

    - name: test3
      shell: pwsh
      run: "ls VictorKrogh.Extensions.Dapper/bin/Release"
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: VictorKrogh.Extensions.Dapper
        path: "VictorKrogh.Extensions.Dapper/bin/Release/**.nupkg"

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download NuGet Package Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: VictorKrogh.Extensions.Dapper
          path: artifact
  
      - name: Prep packages
        run: dotnet nuget add source --username "VictorKroghDotNet" --password ${{ secrets.TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/VictorKroghDotNet/index.json"

      - name: Publish to Github Package Registry
        run: dotnet nuget push "nugetPackage/*.nupkg" --source "github" --api-key ${TOKEN}
        env:
          TOKEN: ${{ secrets.TOKEN }}
          
      - name: Pre-Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          automatic_release_tag: "pre-release"
          prerelease: true
          title: "Pre-release"
          files: "nugetPackage/*"
